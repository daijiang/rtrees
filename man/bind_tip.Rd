% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/bind_tip.R
\name{bind_tip}
\alias{bind_tip}
\title{Bind a tip to a phylogeny}
\usage{
bind_tip(tree = NULL, where, tip_label, frac = 0.5,
  new_node_above = FALSE, node_label = NULL, return_tree = TRUE,
  tree_tbl = NULL, node_heights = NULL)
}
\arguments{
\item{tree}{A phylogeny, with class of "phylo".}

\item{where}{Location where to insert the tip. It can be either tip label or node label, but must be characters. If the location does not have a name, assign it first.}

\item{tip_label}{Name of the new tip inserted.}

\item{frac}{The fraction of branch length, must be between 0 and 1. This only applies when location is a tip or \code{new_node_above = TRUE}. The distance from the new inserted node to the location (a node or a tip) is the branch length of the location * (1 - frac).}

\item{new_node_above}{Whether to insert the new node above when the location is a node? Default is \code{FALSE}, which will attach the new tip to the location node.}

\item{node_label}{Name of the new node created. This only applies when location is a tip or \code{new_node_above = TRUE}.}

\item{return_tree}{Whether to return a phylogeny with class "phylo?" Default is \code{TRUE}. Otherwise, it will return a data frame.}

\item{tree_tbl}{A tibble version of the tree, optional.}

\item{node_heights}{A named numeric vector of node hieghts of the tree, generated by \code{\link[ape:branching.times]{ape::branching.times()}}. It is also optional if \code{tree} is specified; but required if \code{tree_tbl} is specified.}
}
\value{
Either a phylogeny or a data frame, which can be then converted to a phylogeny later.
}
\description{
Graft a tip to a phylogeny at location specified.
}
\examples{
\dontrun{
library(rtrees)
bind_tip(tree_plant_otl, "N70407", tip_label = "test_sp")
tree_plant_otl_df = tidytree::as_tibble(tree_plant_otl)
node_heights = ape::branching.times(tree_plant_otl)
bind_tip(tree_tbl = tree_plant_otl_df, where = "N70407", 
         tip_label = "test_sp", node_heights = node_heights)
}
}
